name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  stack:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Prepare .env
        run: |
          mkdir -p src
          if [ -f src/.env.example ]; then
            cp src/.env.example src/.env
          else
            {
              echo "APP_KEY=base64:$(openssl rand -base64 32)"
              echo "APP_ENV=testing"
              echo "APP_DEBUG=false"
              echo "DB_CONNECTION=mysql"
              echo "DB_HOST=db"
              echo "DB_PORT=3306"
              echo "DB_DATABASE=hxhc"
              echo "DB_USERNAME=hxhc"
              echo "DB_PASSWORD=secret"
            } > src/.env
          fi

      - uses: docker/setup-buildx-action@v3

      - name: Build & start stack
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d --build

      - name: Run migrations
        run: |
          docker compose -f docker-compose.yml -f docker-compose.ci.yml \
            exec -T app php artisan migrate --force --no-interaction

      - name: Wait for /cards endpoint
        run: |
          for i in {1..20}; do
            if curl -fs http://localhost:8080/cards >/dev/null; then
              echo "API ready ✅"; exit 0
            fi
            echo "Waiting ($i/20)…"
            sleep 5
          done
          echo "API did not respond in time ❌"
          docker compose -f docker-compose.yml -f docker-compose.ci.yml logs
          exit 1

      - name: Shutdown stack
        if: always()
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml down -v
